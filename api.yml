openapi: '3.0.2'

info:
  title: app-exposer
  version: '1.0'

servers:
  - url: http://localhost:60000
    description: Locally running API.
  - url: http://localhost:8083
    description: Port-forwarded access to the API.

components:
  parameters:
    analysisIDInPath:
      name: analysis-id
      in: path
      required: true
      description: >
        The UUID assigned to the analysis. Corresponds to the id column in the
        jobs table in the database.
      schema:
        type: string

    analysisName:
      name: analysis-name
      in: query
      required: false
      description: The name of the analysis. Provided by the user who launched the analysis.
      schema:
        type: string

    appID:
      name: app-id
      in: query
      required: false
      description: The UUID assigned to the app used to launch the analysis.
      schema:
        type: string

    appName:
      name: app-name
      in: query
      required: false
      description: The name of the app used to launch the analysis. Provided by the app integrator.
      schema:
        type: string
    
    externalID:
      name: external-id
      in: query
      required: false
      description: The value of the external_id field in the job_steps table.
      schema:
        type: string

    externalIDInPath:
      name: id
      in: path
      description: >
        The external_id value from the job_steps table that is used to
        track this job.
      required: true
      schema:
        type: string
    
    userID:
      name: user-id
      in: query
      required: false
      description: The UUID assigned to the user that launched the analysis.
      schema:
        type: string
    
    username:
      name: username
      in: query
      required: false
      description: The username of the user that launched the analysis.
      schema:
        type: string

    disableResourceTracking:
      name: disable-resource-tracking
      in: query
      required: false
      description: >
        When set to true, bypasses resource quota and concurrent job limit enforcement.
        Intended for service-to-service calls only. Defaults to false.
      schema:
        type: boolean
        default: false

  responses:
    InternalError:
      description: An internal error occurred.
      content:
        text/plain:
          schema:
            type: string

    BadRequestError:
      description: Bad request
      content:
        text/plain:
          schema:
            type: string
  
    ForbiddenError:
      description: Forbidden
      content:
        text/plain:
          schema:
            type: string

  schemas:
    ContainerState:
      properties:
        waiting:
          $ref: '#/components/schemas/ContainerStateWaiting'
        running:
          $ref: '#/components/schemas/ContainerStateRunning'
        terminated:
          $ref: '#/components/schemas/ContainerStateTerminated'
    
    ContainerStateWaiting:
      properties:
        reason:
          type: string
        message:
          type: string

    ContainerStateRunning:
      properties:
        startedAt:
          type: string

    ContainerStateTerminated:
      properties:
        exitCode:
          type: integer
          format: int32
        signal:
          type: integer
          format: in32
        reason:
          type: string
        message:
          type: string
        startedAt:
          type: string
        finishedAt:
          type: string
        containerID:
          type: string

    ContainerStatus:
      properties:
        name:
          type: string
        ready:
          type: boolean
        restartCount:
          type: integer
          format: int32
        state:
          $ref: '#/components/schemas/ContainerState'
        lastState:
          $ref: '#/components/schemas/ContainerState'
        image:
          type: string
        imageID:
          type: string
        containerID:
          type: string
        started:
          type: boolean

    Deployment:
      properties:
        name: 
          type: string
        namespace:
          type: string
        analysisName:
          type: string
        appName:
          type: string
        appID:
          type: string
        externalID:
          type: string
        userID:
          type: string
        username:
          type: string
        creationTimestamp:
          type: string
        image:
          type: string
        port:
          type: integer
          format: int32
        user:
          type: integer
          format: int64
        group:
          type: integer
          format: int64
        command:
          type: array
          items:
            type: string

    Pod:
      properties:
        name: 
          type: string
        namespace:
          type: string
        analysisName:
          type: string
        appName:
          type: string
        appID:
          type: string
        externalID:
          type: string
        userID:
          type: string
        username:
          type: string
        creationTimestamp:
          type: string
        phase:
          type: string
        message:
          type: string
        reason:
          type: string
        containerStatuses:
          type: array
          items:
            $ref: '#/components/schemas/ContainerStatus'
        initContainerStatuses:
          type: array
          items:
            $ref: '#/components/schemas/ContainerStatus'

    ConfigMap:
      properties:
        name: 
          type: string
        namespace:
          type: string
        analysisName:
          type: string
        appName:
          type: string
        appID:
          type: string
        externalID:
          type: string
        userID:
          type: string
        username:
          type: string
        creationTimestamp:
          type: string
        data:
          type: object
    
    Ingress:
      properties:
        name: 
          type: string
        namespace:
          type: string
        analysisName:
          type: string
        appName:
          type: string
        appID:
          type: string
        externalID:
          type: string
        userID:
          type: string
        username:
          type: string
        creationTimestamp:
          type: string
        rules:
          type: array
          items:
            $ref: '#/components/schemas/IngressRule'

    IngressRule:
      properties:
        host:
          type: string
        http:
          type: array
          items:
            type: object

    Service:
      properties:
        name: 
          type: string
        namespace:
          type: string
        analysisName:
          type: string
        appName:
          type: string
        appID:
          type: string
        externalID:
          type: string
        userID:
          type: string
        username:
          type: string
        creationTimestamp:
          type: string
        ports:
          type: array
          items:
            $ref: '#/components/schemas/ServicePort'
    
    ServicePort:
      properties:
        name:
          type: string
        nodePort:
          type: integer
          format: int32
        targetPort:
          type: integer
          format: int32
        targetPortName:
          type: string
        port:
          type: integer
          format: int32
        protocol:
          type: string
  
    Resources:
      properties:
        deployments:
          type: array
          items:
            $ref: '#/components/schemas/Deployment'
        pods:
          type: array
          items:
            $ref: '#/components/schemas/Pod'
        configMaps:
          type: array
          items:
            $ref: '#/components/schemas/ConfigMap'
        services:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        ingresses:
          type: array
          items:
            $ref: '#/components/schemas/Ingress'

paths:
  /vice/listing:
    get:
      summary: List all resources
      description: Lists resources for in-cluster VICE analyses, optionally filtered by labels provided in the query.
      parameters:
        - $ref: '#/components/parameters/analysisName'
        - $ref: '#/components/parameters/appID'
        - $ref: '#/components/parameters/appName'
        - $ref: '#/components/parameters/externalID'
        - $ref: '#/components/parameters/userID'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resources'

  /vice/listing/deployments:
    get:
      summary: List Deployments
      description:  Lists deployment resources for in-cluster VICE analyses, optionally filtered by labels provided in the query.
      parameters:
        - $ref: '#/components/parameters/analysisName'
        - $ref: '#/components/parameters/appID'
        - $ref: '#/components/parameters/appName'
        - $ref: '#/components/parameters/externalID'
        - $ref: '#/components/parameters/userID'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  deployments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Deployment'

  /vice/listing/pods:
    get:
      summary: List Pods
      description: Lists pod resources for in-cluster VICE analyses, optionally filtered by labels provided in the query.
      parameters:
        - $ref: '#/components/parameters/analysisName'
        - $ref: '#/components/parameters/appID'
        - $ref: '#/components/parameters/appName'
        - $ref: '#/components/parameters/externalID'
        - $ref: '#/components/parameters/userID'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pods:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pod'

  /vice/listing/configmaps:
    get:
      summary: List ConfigMaps
      description: Lists ConfigMaps for in-cluster VICE analyses, optionally filtering them by the labels provided in the query.
      parameters:
        - $ref: '#/components/parameters/analysisName'
        - $ref: '#/components/parameters/appID'
        - $ref: '#/components/parameters/appName'
        - $ref: '#/components/parameters/externalID'
        - $ref: '#/components/parameters/userID'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  configmaps:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConfigMap'

  /vice/listing/services:
    get:
      summary: List Services
      description: Lists Service resources for in-cluster VICE analyses, optionally filtering them by the labels provided in the query.
      parameters:
        - $ref: '#/components/parameters/analysisName'
        - $ref: '#/components/parameters/appID'
        - $ref: '#/components/parameters/appName'
        - $ref: '#/components/parameters/externalID'
        - $ref: '#/components/parameters/userID'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  services:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'

  /vice/listing/ingresses:
    get:
      summary: List Ingresses
      description: Lists Ingress resources for in-cluster VICE analyses, optionally filtering them by the labels provided in the query.
      parameters:
        - $ref: '#/components/parameters/analysisName'
        - $ref: '#/components/parameters/appID'
        - $ref: '#/components/parameters/appName'
        - $ref: '#/components/parameters/externalID'
        - $ref: '#/components/parameters/userID'
        - $ref: '#/components/parameters/username'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ingresses:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ingress'

  /vice/apply-labels:
    post:
      summary: Apply extra labels
      description: Tells app-exposer to apply the analysis-id and login-ip labels if on resources, but only if they're missing.
      responses:
        '200':
          description: OK

  /vice/async-data:
    get:
      summary: Get asynchronously applied data about an analysis.
      description: >
        Retrieves data about an analysis that is developed asynchronously. 
        The call is not asynchronous.
      parameters:
        - $ref: '#/components/parameters/externalID'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysisID:
                    type: string
                  subdomain:
                    type: string
                  ipAddr:
                    type: string
        '500':
          $ref: "#/components/responses/InternalError"

  /vice/{id}/download-input-files:
    post:
      summary: Activate input file downloads
      description: >
        Tell the analysis to download input files with vice-file-transfers. 
        Blocks until all of the downloads are complete. Called automatically,
        should need to be manually called.
      parameters:
        - $ref: '#/components/parameters/externalIDInPath'
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalError'

  /vice/{id}/save-output-files:
    post:
      summary: Activate output file uploads.
      description: >
        Tell the analysis to upload output files with vice-file-transfers.
        Blocks until all of the uploads are complete. Called automatically,
        shouldn't need to be manually called.
      parameters:
        - $ref: '#/components/parameters/externalIDInPath'
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalError'

  /vice/{id}/exit:
    post:
      summary: Terminate the analysis without saving.
      description: >
        Tells app-exposer to terminate the running analysis without bothering
        to upload output files first. Should only be used as an absolute last
        resort. Output files cannot be retrieved after this call is made.
      parameters:
        - $ref: '#/components/parameters/externalIDInPath'
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/InternalError'

  /vice/{analysis-id}/pods:
    get:
      summary: List Pods by analysis UUID
      description: >
        Returns a listing of the pods associated with the analysis UUID. Old,
        use the /vice/listing/pods endpoint instead, it's more flexible.
      parameters:
        - $ref: '#/components/parameters/analysisIDInPath'
      responses:
        '200':
          description: Pod listing. Objects come straight from the k8s API.
          content:
            application/json:
              schema:
                type: object
                properties:
                  pods:
                    type: array
                    items:
                      type: object
                      description: The Pod objects straight from k8s.
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalError'

  /vice/{analysis-id}/logs:
    get:
      summary: Access the analysis logs
      description: >
        Returns the logs for a container in the VICE analysis pod. Does
        not tail the logs.
      parameters:
        - $ref: '#/components/parameters/analysisIDInPath' 
        - name: previous
          in: query
          required: false
          description: Should return logs of terminated containers.
          schema:
            type: boolean
        - name: since
          in: query
          required: false
          description: >
            Start displaying the logs after this point in time, expressed in
            seconds since the epoch.
          schema:
            type: integer
            format: int64
        - name: since-time
          in: query
          required: false
          description: >
            Basically the same thing as "since", except it gets converted into
            a Unix time type provided by k8s. Not sure why I bothered to 
            include this. Use the other one.
          schema:
            type: integer
            format: int64
        - name: tail-lines
          in: query
          required: false
          description: The number of lines at the end of the log to show.
          schema:
            type: integer
            format: int64
        - name: container
          in: query
          required: false
          description: >
            The name of the container from which to grab the logs.
          schema:
            type: string
            default: analysis
            enum:
              - input-files
              - vice-proxy
              - analysis
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  since_time:
                    description: The start time for the logs.
                    type: string
                  lines:
                    description: The lines in the log.
                    type: array
                    items:
                      type: string
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalError'

  /vice/{analysis-id}/time-limit:
    post:
      summary: Extend the time-limit
      description: >
        Extends the time-limit on a running VICE analysis by 3 days.
      parameters:
        - $ref: '#/components/parameters/analysisIDInPath'
        - name: user
          in: query
          required: true
          description: >
            The username of the person requesting the time limit extension. If
            the '@iplantcollaborative.org' part is missing, it will be added
            behind the scenes, so it's optional.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_limit:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '500':
          $ref: '#/components/responses/InternalError'

    get:
      summary: Get time limit
      description: >
        Returns the current time limit for the analysis with the UUID 
        provided in the path.
      parameters:
        - $ref: '#/components/parameters/analysisIDInPath'
        - name: user
          in: query
          required: true
          description: >
            The username of the person requesting the time limit extension. If
            the '@iplantcollaborative.org' part is missing, it will be added
            behind the scenes, so it's optional.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  time_limit:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalError'

  /vice/{host}/url-ready:
    get:
      summary: Check for analysis readiness
      description: >
        Performs a series of checks to ensure that the analysis is fully up and
        ready to respond to users. Used by the loading screen to determine
        whether to redirect the user to the analysis UI.
      parameters:
        - name: host
          in: path
          required: true
          description: >
            The subdomain assigned to the VICE analysis.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ready:
                    type: boolean
        '500':
          $ref: '#/components/responses/InternalError'

  /vice/launch:
    post:
      summary: Launch a new VICE analysis
      description: >
        Accepts a DE analysis description in JSON form and turns it into a set
        of K8s resources that run a web application and enforce access
        restrictions. We're not going to document the JSON body here because
        madness would be the result, both for me and for the reader. If you 
        need to call this endpoint outside of the 'apps' service in the DE,
        I highly recommend just writing a new version of the endpoint with a 
        simplified JSON payload and filing a merge/pull request. Believe it 
        not, your life will be easier.
      requestBody:
        description: >
          A JSON analysis description as submitted by the apps service.
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/InternalError'
        